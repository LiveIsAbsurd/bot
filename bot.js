const token = require("../token.js");

const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");
const fs = require("fs");
const { json } = require("body-parser");

const cuefaGame = require("./functions/cuefa-game.js");
const getUserCuefaStats = require("./functions/get-user-cuefa-stats.js");

function hiText(username) {
  let text = `
  –î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, ${username}!
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –∏ —Å–∫—Ä–æ–º–Ω—ã–π —á–∞—Ç–∏–∫!
–ß—É–≤—Å—Ç–≤—É–π—Ç–µ —Å–µ–±—è –∫–∞–∫ —É @user148 –¥–æ–º–∞!
–í—Å–µ –ø—Ä–∞–≤–∏–ª–∞ –≤ –∑–∞–∫—Ä–µ–ø–µ.
–ñ–µ–ª–∞—é –æ—Å–≤–æ–∏—Ç—å—Å—è –≤ –Ω–∞—à–µ–º —á–∞—Ç–∏–∫–µ!
–ó–∞—Ö–æ–¥–∏ –Ω–∞ —Å–∞–π—Ç –Ω–∞—à–µ–≥–æ —á–∞—Ç–∞: https://liveisabsurd.github.io/Meme_House/`;
  return text;
}

const bot = new TelegramBot(token, { polling: { interval: 1000 } });

bot.onText(/\/cuefa/, (msg) => {
  if (msg.chat.id == "-1001807749316") {
    if (msg.from.username) {
      bot.deleteMessage(msg.chat.id, msg.message_id);
      cuefaGame(msg, null, false, true);
    } else {
      bot.sendMessage(
        msg.chat.id,
        `–î–ª—è –∏–≥—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`
      );
    }
  } else {
    cuefaGame(msg);
  }
});

bot.onText(/\/getcuefastats/, msg => {
  bot.deleteMessage(msg.chat.id, msg.message_id);
  if (msg.chat.id == "-1001807749316") {
    if (msg.reply_to_message) {
      getUserCuefaStats(String(msg.reply_to_message.from.id), msg);
    } else if (msg.from.username) {
      getUserCuefaStats(String(msg.from.id), msg);
    }
  }
});

bot.onText(/\/getfullcuefastats/, msg => {
  bot.deleteMessage(msg.chat.id, msg.message_id);
  if (msg.chat.id == "-1001807749316") {
    getFullCuefaState(msg);
  }
});

function getFullCuefaState(msg) {
  fs.readFile("../cuefaStats.json", "UTF-8", (err, data) => {
    let stats = JSON.parse(data);
    let fullState = Object.values(stats);

    fullState.sort((a, b) => {
      return b.win - a.win;
    });

    let text = "";
    let i = 1;

    fullState.forEach(el => {
      text += `${i}. ${el.name} - ${el.total} | ${el.win} | ${el.lose} \n`
      i++;
    })

    bot.sendMessage(msg.chat.id,
      `–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ "–∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞":
          
# | –ò–≥—Ä—ã | –ü–æ–±–µ–¥—ã | –ü–æ—Ä–∞–∂–µ–Ω–∏—è

${text}`);
  });
};



//__________________________________________________

bot.on("inline_query", (query) => {
  //console.log(query);
  //console.log(query.query == "/start");
  if (query.query == "/start") {
    const result = [
      {
        id: "1",
        type: "article",
        title: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ",
        input_message_content: {
          message_text: `–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –æ—Ñ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ª—É—á—à–µ–≥–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ —á–∞—Ç–∞ https://t.me/meme_house_chat.
–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è!
–ó–∞—Ö–æ–¥–∏ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç https://liveisabsurd.github.io/Meme_House/`,
        }
      }
    ];

    bot.answerInlineQuery(query.id, result);
  }
});

bot.onText(/\/getKey/, (msg) => {
  if (msg.from.username == "LiveIsAbsurd") {
    const opts = {
      reply_markup: {
        inline_keyboard: [[{ text: "–ö–Ω–æ–ø–∫–∞ 0", callback_data: "key" }]],
      },
    };

    bot.sendMessage(msg.chat.id, "–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞", opts);
  }
});

function hiCount(query, options, collection, userId = undefined) {
  const messageId = query.message.message_id;

  if (!collection[messageId]) {
    collection[messageId] = {
      count: 1,
      users: [],
    };
  }

  if (userId && collection[messageId]["users"].includes(userId)) {
    bot.answerCallbackQuery(query.id, {
      text: "–¢—ã —É–∂–µ –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª —É—á–∞—Å—Ç–Ω–∏–∫–∞!",
      show_alert: true,
    });
  } else {
    collection[messageId].count += 1;

    if (userId) {
      collection[messageId]["users"].push(userId);
    }

    bot.editMessageReplyMarkup(options, {
      chat_id: query.message.chat.id,
      message_id: messageId,
    });

    fs.writeFile(
      "../hiMembers.json",
      JSON.stringify(collection),
      "UTF-8",
      (err) => {
        if (err) {
          console.log(err);
        }
      }
    );
  }
};

bot.on("callback_query", (query) => {
  const messageId = query.message.message_id;

  if (query.data == "key") {
    fs.readFile("../hiMembers.json", "UTF-8", (err, data) => {
      let counts = JSON.parse(data);

      const opts = {
        inline_keyboard: [
          [
            {
              text: `–ö–Ω–æ–ø–∫–∞ ${
                counts[messageId] ? counts[messageId]["count"] : 1
              }`,
              callback_data: "key",
            },
          ],
        ],
      };

      hiCount(query, opts, counts);
    });
  } else if (query.data == "hi") {
    fs.readFile("../hiMembers.json", "UTF-8", (err, data) => {
      let counts = JSON.parse(data);

      const opts = {
        inline_keyboard: [
          [
            {
              text: `–ü—Ä–∏–≤–µ—Ç! \u{1F44b}  (${
                counts[messageId] ? counts[messageId]["count"] : 1
              })`,
              callback_data: "hi",
            },
          ],
        ],
      };

      hiCount(query, opts, counts, query.from.id);
    });
  }

  if (query.data == "rock" || query.data == "nosh" || query.data == "paper") {
    //console.log(query);
    if (query.from.username) {
      if (query.message.chat.id == "-1001807749316") {
        cuefaGame(null, query, false, true);
      } else {
        cuefaGame(null, query, false);
      }
    } else {
      bot.answerCallbackQuery(query.id, {
        text: "–î–ª—è –∏–≥—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–∏ @username (–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)",
        show_alert: true,
      });
    }
  }

  if (query.data == "cuefaReplay") {
    if (query.from.username) {
      cuefaGame(null, query, true, true);
      bot.answerCallbackQuery(query.id, {
        text: "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ üîÑ",
      });
    } else {
      bot.answerCallbackQuery(query.id, {
        text: "–î–ª—è –∏–≥—Ä—ã —É—Å—Ç–∞–Ω–æ–≤–∏ @username (–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)",
        show_alert: true,
      });
    }
  }
});

bot.onText(/\/kick/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.reply_to_message.from.id;
  let adminList = [];

  if (chatId == "-1001807749316") {
    axios
      .get(
        `https://api.telegram.org/bot${token}/getChatAdministrators?chat_id=-1001807749316`
      )
      .then((response) => {
        response.data.result.forEach((admin) => {
          if (admin.can_restrict_members || admin.status == "creator") {
            const username = admin.user.username;
            adminList.push(username.toLowerCase());
          }
        });

        let isAdmin = Number(
          adminList.indexOf(msg.from.username.toLowerCase())
        );

        if (isAdmin >= 0) {
          axios
            .get(
              `https://api.telegram.org/bot${token}/kickChatMember?chat_id=${chatId}&user_id=${userId}`
            )
            .then(() => {
              bot.sendMessage(chatId, "–£—á–∞—Å—Ç–Ω–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ —á–∞—Ç–∞");
            })
            .catch((error) => {
              console.log(error);
              bot.sendMessage(
                chatId,
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞"
              );
            });
        } else {
          bot.sendMessage(chatId, "–¢—ã –∫—Ç–æ —Ç–∞–∫–æ–π, —á—Ç–æ–±—ã —Ç–∞–∫–æ–µ –¥–µ–ª–∞—Ç—å?");
        }
      });
  } else {
    bot.sendMessage(
      261749882,
      `@${msg.from.username} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª /kick –≤ –¥—Ä—É–≥–æ–º —á–∞—Ç–µ'`
    );
  }
});

bot.on("new_chat_members", (msg) => {
  const chatId = msg.chat.id;
  const userName = msg.new_chat_member.username
    ? `@${msg.new_chat_member.username}`
    : msg.new_chat_member.first_name;

  if (chatId == "-1001807749316") {
    const opts = {
      reply_markup: {
        inline_keyboard: [[{ text: "–ü—Ä–∏–≤–µ—Ç! \u{1F44b}", callback_data: "hi" }]],
      },
    };

    bot.sendMessage(chatId, hiText(userName), opts);
  }
});

bot.on("left_chat_member", (msg) => {
  const userName = msg.left_chat_member.username;
  const chatId = msg.chat.id;

  if (chatId == "-1001807749316") {
    bot.sendMessage(
      chatId,
      `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @${userName} –ø–æ–∫–∏–Ω—É–ª –Ω–∞—Å.
    –ù—É —á—Ç–æ–∂... –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –æ—Ç–±–æ—Ä`
    );
  }
});

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;

  bot.sendMessage(
    chatId,
    `–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –æ—Ñ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ª—É—á—à–µ–≥–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ —á–∞—Ç–∞ https://t.me/meme_house_chat.
–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è!
–ó–∞—Ö–æ–¥–∏ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç https://liveisabsurd.github.io/Meme_House/`
  );
});

bot.onText(/\/setAdDescription (.+)/, (msg, match) => {
  const userAdmin = match[1].replace("@", "");
  const text = match.input.split("\n")[1];

  let adminList = [];

  if (msg.from.username == "LiveIsAbsurd") {
    axios
      .get(
        `https://api.telegram.org/bot${token}/getChatAdministrators?chat_id=-1001807749316`
      )
      .then((response) => {
        let UsernameToId = {};

        response.data.result.forEach((admin) => {
          const username = admin.user.username;
          adminList.push(username.toLowerCase());
          UsernameToId[username] = admin.user.id;
        });

        let isAdmin = Number(adminList.indexOf(userAdmin.toLowerCase()));

        if (isAdmin >= 0) {
          fs.readFile("../adminDescriptions.json", "UTF-8", (err, data) => {
            let adminDesc = JSON.parse(data);
            adminDesc[UsernameToId[userAdmin.toLowerCase()]] = text;

            fs.writeFile(
              "../adminDescriptions.json",
              JSON.stringify(adminDesc),
              "UTF-8",
              (err) => {
                console.log(err);
              }
            );
            bot.sendMessage(
              msg.chat.id,
              `–û–ø–∏—Å–∞–Ω–∏–µ @${userAdmin} –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: '${text}'`
            );
          });
        } else {
          bot.sendMessage(msg.chat.id, `@${userAdmin} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º`);
        }
      });
  } else {
    bot.sendMessage(msg.chat.id, `–Ø —Ç–µ–±—è –Ω–µ –∑–Ω–∞—é`);
  }
});

bot.onText(/\/setDescription (.+)/, (msg, match) => {
  const text = match[1];
  let adminList = [];

  axios
    .get(
      `https://api.telegram.org/bot${token}/getChatAdministrators?chat_id=-1001807749316`
    )
    .then((response) => {
      response.data.result.forEach((admin) => {
        const username = admin.user.username;
        adminList.push(username.toLowerCase());
      });

      let username = msg.from.username;
      let userId = msg.from.id;
      let isAdmin = Number(adminList.indexOf(username.toLowerCase()));

      if (isAdmin >= 0) {
        fs.readFile("../adminDescriptions.json", "UTF-8", (err, data) => {
          let adminDesc = JSON.parse(data);
          adminDesc[userId] = text;

          fs.writeFile(
            "../adminDescriptions.json",
            JSON.stringify(adminDesc),
            "UTF-8",
            (err) => {
              console.log(err);
            }
          );
          bot.sendMessage(
            msg.chat.id,
            `${username}, —Ç–≤–æ—ë –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ '${text}'`
          );
          bot.sendMessage(
            261749882,
            `${username} –∏–∑–º–µ–Ω–∏–ª –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ '${text}'`
          );
        });
      } else {
        bot.sendMessage(msg.chat.id, `–¢—ã –Ω–µ —è–≤–ª—è–µ—à—Å—è –∞–¥–º–∏–Ω–æ–º —á–∞—Ç–∞`);
        bot.sendMessage(261749882, `${username} –ø–æ–ø—ã—Ç–∞–ª—Å—è —Å–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ`);
      }
    });
});
